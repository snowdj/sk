simPr<-matrix(nrow=n+1)
for(j in 2:length(meanPr)){
dyuima <- simulate(yuima, xinit= meanPr[j], true.parameter=list(theta1=gbmPara[j,1],theta2=gbmPara[j,2]))
as.numeric(dyuima@data@ original.data)
simPr<-cbind(simPr,as.numeric(dyuima@data@ original.data))
}
simPr
simPr<-as.data.frame(simPr)
simPr<-simPr[,complete.cases(simPr)]
simPr
gbmPara<-gbmPara[-1,]
gbmPara
for(i in 2:ncol(price)){
x <- price[,i]
Data2=setYuima(data=setData(x),ymodel)
mle1 <- qmle(Data2, start = list(theta1 = 1, theta2 = -0.001),lower = list(theta1=-2, theta2=-1),upper = list(theta1=0.5, theta2=0.5), method = "L-BFGS-B")
coef(mle1)
gbmPara <- rbind(gbmPara, coef(mle1))
}
gbmPara<-as.data.frame(gbmPara)
gbmPara<-gbmPara[-1,]
gbmPara
gbmPara<- matrix(ncol=2)
# loop for all parameter
for(i in 2:ncol(price)){
x <- price[,i]
Data2=setYuima(data=setData(x),ymodel)
mle1 <- qmle(Data2, start = list(theta1 = 1, theta2 = -0.001),lower = list(theta1=-2, theta2=-1),upper = list(theta1=0.5, theta2=0.5), method = "L-BFGS-B")
coef(mle1)
gbmPara <- rbind(gbmPara, coef(mle1))
}
gbmPara<-as.data.frame(gbmPara)
gbmPara
gbmPara<-gbmPara[-1,]
names(gbmPara)<-c("sigma","mu")
gbmPara
simPr<-matrix(nrow=n+1)
# set loop for 5 crop sim price
for(j in 2:length(meanPr)){
dyuima <- simulate(yuima, xinit= meanPr[j], true.parameter=list(theta1=gbmPara[j,1],theta2=gbmPara[j,2]))
as.numeric(dyuima@data@ original.data)
simPr<-cbind(simPr,as.numeric(dyuima@data@ original.data))
}
simPr
simPr<-as.data.frame(simPr[,-1])
names(gbmPara)<-names(prices)
names(gbmPara)<-names(price)
simPr
simPr<-matrix(nrow=n+1)
# set loop for 5 crop sim price
for(j in 2:length(meanPr)){
dyuima <- simulate(yuima, xinit= meanPr[j], true.parameter=list(theta1=gbmPara[j,1],theta2=gbmPara[j,2]))
as.numeric(dyuima@data@ original.data)
simPr<-cbind(simPr,as.numeric(dyuima@data@ original.data))
}
simPr
simPr<-matrix(nrow=n+1)
# set loop for 5 crop sim price
for(j in 1:length(meanPr)){
dyuima <- simulate(yuima, xinit= meanPr[j], true.parameter=list(theta1=gbmPara[j,1],theta2=gbmPara[j,2]))
as.numeric(dyuima@data@ original.data)
simPr<-cbind(simPr,as.numeric(dyuima@data@ original.data))
}
simPr
simPr<-as.data.frame(simPr[,-1])
names(gbmPara)<-names(price)
simPr
names(gbmPara)<-names(price)
simPr<-as.data.frame(simPr[,-1])
names(gbmPara)<-names(price)[-1]
simPr
simPr<-matrix(nrow=n+1)
# set loop for 5 crop sim price
for(j in 1:length(meanPr)){
dyuima <- simulate(yuima, xinit= meanPr[j], true.parameter=list(theta1=gbmPara[j,1],theta2=gbmPara[j,2]))
as.numeric(dyuima@data@ original.data)
simPr<-cbind(simPr,as.numeric(dyuima@data@ original.data))
}
simPr
simPr<-as.data.frame(simPr[,-1])
names(gbmPara)<-names(price)[-1]
simPr
names(price)[-1]
simPr
head(simPr)
names(simPr)<-names(price)[-1]
head(simPr)
writer.table(gbmPara, "gbmPara")
library(xtable)
writer.table(gbmPara, "gbmPara")
write.table(gbmPara, "gbmPara")
setwd("E:/Dropbox/book/economics/485/projects/nlfarm/data/SK")
write.table(gbmPara, "gbmPara.csv", col.names = TRUE,row.names = FALSE, sep="," )
row.names(gbmPara) <- names(price)
names(price)
names(price)[-1]
row.names(gbmPara) <- names(price)[-1]
write.table(gbmPara, "gbmPara.csv", col.names = TRUE,row.names = FALSE, sep="," )
write.table(gbmPara, "gbmPara.csv", col.names = TRUE,row.names = T, sep="," )
price<- read.csv("price.csv", header = T, sep = ",")
gbmPara<- matrix(ncol=2)
# loop for all parameter
for(i in 2:ncol(price)){
x <- price[,i]
Data2=setYuima(data=setData(x),ymodel)
mle1 <- qmle(Data2, start = list(theta1 = 1, theta2 = -0.001),lower = list(theta1=-2, theta2=-1),upper = list(theta1=0.5, theta2=0.5), method = "L-BFGS-B")
coef(mle1)
gbmPara <- rbind(gbmPara, coef(mle1))
}
gbmPara<-as.data.frame(gbmPara)
gbmPara<-gbmPara[-1,]
names(gbmPara)<-c("sigma","mu")
row.names(gbmPara) <- names(price)[-1]
meanPr<-apply(price[,-1],2,mean)
write.table(gbmPara, "gbmPara.csv", col.names = TRUE,row.names = T, sep="," )
simPr<-matrix(nrow=n+1)
# set loop for 5 crop sim price
for(j in 1:length(meanPr)){
dyuima <- simulate(yuima, xinit= meanPr[j], true.parameter=list(theta1=gbmPara[j,1],theta2=gbmPara[j,2]))
as.numeric(dyuima@data@ original.data)
simPr<-cbind(simPr,as.numeric(dyuima@data@ original.data))
}
head(simPr)
simPr<-as.data.frame(simPr[,-1])
names(simPr)<-names(price)[-1]
head(simPr)
print(xtable(head(simPr), type = "html", include.rownames = F)
print(xtable(head(simPr)), type = "html", include.rownames = F)
print(xtable(head(simPr)), type = "html", include.rownames = FALSE )
write.table(simPr,"simPr.csv", col.names = TRUE,row.names = FALSE, sep=",", )
meanPr<-apply(price[265:340,-1],2,mean)
simPr<-matrix(nrow=n+1)
# set loop for 5 crop sim price
for(j in 1:length(meanPr)){
dyuima <- simulate(yuima, xinit= meanPr[j], true.parameter=list(theta1=gbmPara[j,1],theta2=gbmPara[j,2]))
as.numeric(dyuima@data@ original.data)
simPr<-cbind(simPr,as.numeric(dyuima@data@ original.data))
}
head(simPr)
simPr<-as.data.frame(simPr[,-1])
names(simPr)<-names(price)[-1]
write.table(simPr,"simPr.csv", col.names = TRUE,row.names = FALSE, sep=",", )
write.table(simPr,"simPr.csv", col.names = TRUE,row.names = FALSE, sep=",", )
head(simPr)
library(ggplot2)
histpr<-ggplot(data=melt(simPr), aes(as.factor(variable), value, fill=factor(variable)))
histpr + geom_boxplot() + guides(fill=guide_legend(title=NULL))+labs(title="Boxplot for Simulative Price", x= "Crop", y="Price")
simPrPlot<-ggplot(data=melt(simPr), aes(as.factor(variable), value, fill=factor(variable)))
library(reshape)
simPrPlot<-ggplot(data=melt(simPr), aes(as.factor(variable), value, fill=factor(variable)))
simPrPlot + geom_boxplot() + guides(fill=guide_legend(title=NULL))+labs(title="Boxplot for Simulative Price", x= "Crop", y="Price")
head(simPr)
price<- read.csv("price.csv", header = T, sep = ",")
head(price)
ggplot(simPr, aes(simPr)) + geom_line(aes(y = simPr$Wheat, colour = "Wheat")) +  geom_line(aes(y = simPr$Barley, colour = "Barley")) + geom_line(aes(y = simPr$Oats, colour = "Oats")) + geom_line(aes(y = simPr$Flax, colour = "Flax")) + geom_line(aes(y = simPr$Calona, colour = "Calona")) + labs(title="Trend of History Price", x= "Date", y="Price")+ theme(legend.title=element_blank())
head(simPr)
ggplot(simPr) + geom_line(aes(y = simPr$Wheat, colour = "Wheat")) +  geom_line(aes(y = simPr$Barley, colour = "Barley")) + geom_line(aes(y = simPr$Oats, colour = "Oats")) + geom_line(aes(y = simPr$Flax, colour = "Flax")) + geom_line(aes(y = simPr$Calona, colour = "Calona")) + labs(title="Trend of History Price", x= "Date", y="Price")+ theme(legend.title=element_blank())
ggplot(simPr, aes(time)) + geom_line(aes(y = simPr$Wheat, colour = "Wheat")) +  geom_line(aes(y = simPr$Barley, colour = "Barley")) + geom_line(aes(y = simPr$Oats, colour = "Oats")) + geom_line(aes(y = simPr$Flax, colour = "Flax")) + geom_line(aes(y = simPr$Calona, colour = "Calona")) + labs(title="Trend of History Price", x= "Date", y="Price")+ theme(legend.title=element_blank())
ggplot(simPr, aes(x= 1:nrow(simPr))) + geom_line(aes(y = simPr$Wheat, colour = "Wheat")) +  geom_line(aes(y = simPr$Barley, colour = "Barley")) + geom_line(aes(y = simPr$Oats, colour = "Oats")) + geom_line(aes(y = simPr$Flax, colour = "Flax")) + geom_line(aes(y = simPr$Calona, colour = "Calona")) + labs(title="Trend of History Price", x= "Date", y="Price")+ theme(legend.title=element_blank())
ggplot(simPr, aes(1:nrow(simPr)) + geom_line(aes(y = simPr$Wheat, colour = "Wheat")) +  geom_line(aes(y = simPr$Barley, colour = "Barley")) + geom_line(aes(y = simPr$Oats, colour = "Oats")) + geom_line(aes(y = simPr$Flax, colour = "Flax")) + geom_line(aes(y = simPr$Calona, colour = "Calona")) + labs(title="Trend of History Price", x= "Date", y="Price")+ theme(legend.title=element_blank())
ggplot(simPr, aes(1:nrow(simPr))) + geom_line(aes(y = simPr$Wheat, colour = "Wheat")) +  geom_line(aes(y = simPr$Barley, colour = "Barley")) + geom_line(aes(y = simPr$Oats, colour = "Oats")) + geom_line(aes(y = simPr$Flax, colour = "Flax")) + geom_line(aes(y = simPr$Calona, colour = "Calona")) + labs(title="Trend of History Price", x= "Date", y="Price")+ theme(legend.title=element_blank())
1:nrow(simPr)
ggplot(simPr, aes(x=c(1:nrow(simPr))) + geom_line(aes(y = simPr$Wheat, colour = "Wheat")) +  geom_line(aes(y = simPr$Barley, colour = "Barley")) + geom_line(aes(y = simPr$Oats, colour = "Oats")) + geom_line(aes(y = simPr$Flax, colour = "Flax")) + geom_line(aes(y = simPr$Calona, colour = "Calona")) + labs(title="Trend of History Price", x= "Date", y="Price")+ theme(legend.title=element_blank())
ggplot(simPr, aes(x=c(1:nrow(simPr)))) + geom_line(aes(y = simPr$Wheat, colour = "Wheat")) +  geom_line(aes(y = simPr$Barley, colour = "Barley")) + geom_line(aes(y = simPr$Oats, colour = "Oats")) + geom_line(aes(y = simPr$Flax, colour = "Flax")) + geom_line(aes(y = simPr$Calona, colour = "Calona")) + labs(title="Trend of History Price", x= "Date", y="Price")+ theme(legend.title=element_blank())
simPr$Wheat
ggplot(simPr, aes(x=c(1:nrow(simPr))))
ggplot(simPr, aes(x=c(1:nrow(simPr)))) + geom_line(aes(y = simPr$Wheat, colour = "Wheat"))
plot(simPr)
plot(simPr,1:nrow(simPr))
plot(1:nrow(simPr),simPr)
qplot(1:nrow(simPr),simPr)
qplot(simPr,1:nrow(simPr))
xyplot(simPr,1:nrow(simPr))
library(lattice)
xyplot(simPr,1:nrow(simPr))
plot.ts(simPr)
plot.ts(price)
plot.ts(price[,-1])
library("TTR")
prDecom<-decompose(price)
prDecom<-decompose(price$Wheat)
prDecom<-decompose(simPr)
head(price)
ddf<-t(price)
prDecom<-decompose(ddf)
head(ddf)
price<- read.csv("price.csv", header = T, sep = ",")
price[, 1] <- as.Date(price[, 1], format = "%d/%m/%Y")
prDecom<-decompose(price)
ggplot(simPr, aes(x=simPr.inex)) + geom_line(aes(y = simPr$Wheat, colour = "Wheat"))
reset_index(simPr)
library(ggplot2)
ggplot(simPr, aes(x=1:1001)) + geom_line(aes(y = simPr$Wheat, colour = "Wheat"))
ggplot(simPr, aes(x=1:1001)) + geom_line(aes(y = simPr$Wheat, colour = "Wheat")) +  geom_line(aes(y = simPr$Barley, colour = "Barley")) + geom_line(aes(y = simPr$Oats, colour = "Oats")) + geom_line(aes(y = simPr$Flax, colour = "Flax")) + geom_line(aes(y = simPr$Calona, colour = "Calona")) + labs(title="Trend of Simulative Price", x= "Date", y="Price")+ theme(legend.title=element_blank())
ggplot(simPr, aes(x=1:1001)) + geom_line(aes(y = simPr$Wheat, colour = "Wheat")) +  geom_line(aes(y = simPr$Barley, colour = "Barley"))
ggplot(simPr, aes(x=1:1001)) + geom_line(aes(y = simPr$Wheat, colour = "Wheat")) +  geom_line(aes(y = simPr$Barley, colour = "Barley"))+ geom_line(aes(y = simPr$Oats, colour = "Oats"))
ggplot(simPr, aes(x=1:1001)) + geom_line(aes(y = simPr$Wheat, colour = "Wheat")) +  geom_line(aes(y = simPr$Barley, colour = "Barley"))+ geom_line(aes(y = simPr$Oats, colour = "Oats")) + geom_line(aes(y = simPr$Flax, colour = "Flax"))
ggplot(simPr, aes(x=1:1001)) + geom_line(aes(y = simPr$Wheat, colour = "Wheat")) +  geom_line(aes(y = simPr$Barley, colour = "Barley"))+ geom_line(aes(y = simPr$Oats, colour = "Oats")) + geom_line(aes(y = simPr$Flax, colour = "Flax")) + geom_line(aes(y = simPr$Calona, colour = "Calona"))
head(simPr)
ggplot(simPr, aes(x=1:1001)) + geom_line(aes(y = simPr$Wheat, colour = "Wheat")) +  geom_line(aes(y = simPr$Barley, colour = "Barley"))+ geom_line(aes(y = simPr$Oats, colour = "Oats")) + geom_line(aes(y = simPr$Flax, colour = "Flax")) + geom_line(aes(y = simPr$Canola, colour = "Calona"))
ggplot(simPr, aes(x=1:1001)) + geom_line(aes(y = simPr$Wheat, colour = "Crop")) +  geom_line(aes(y = simPr$Barley, colour = "Barley"))+ geom_line(aes(y = simPr$Oats, colour = "Oats")) + geom_line(aes(y = simPr$Flax, colour = "Flax")) + geom_line(aes(y = simPr$Canola, colour = "Calona"))
ggplot(simPr, aes(x=1:1001)) + geom_line(aes(y = simPr$Wheat, colour = "Wheat")) +  geom_line(aes(y = simPr$Barley, colour = "Barley"))+ geom_line(aes(y = simPr$Oats, colour = "Oats")) + geom_line(aes(y = simPr$Flax, colour = "Flax")) + geom_line(aes(y = simPr$Canola, colour = "Calona"))
ggplot(simPr, aes(x=1:1001)) + geom_line(aes(y = simPr$Wheat, colour = "Wheat")) +  geom_line(aes(y = simPr$Barley, colour = "Barley"))+ geom_line(aes(y = simPr$Oats, colour = "Oats")) + geom_line(aes(y = simPr$Flax, colour = "Flax")) + geom_line(aes(y = simPr$Canola, colour = "Calona"))+ labs(title="Trend of Simulative Price", x= "Date", y="Price")+ theme(legend.title="Crop")
ggplot(simPr, aes(x=1:1001)) + geom_line(aes(y = simPr$Wheat, colour = "Wheat")) +  geom_line(aes(y = simPr$Barley, colour = "Barley"))+ geom_line(aes(y = simPr$Oats, colour = "Oats")) + geom_line(aes(y = simPr$Flax, colour = "Flax")) + geom_line(aes(y = simPr$Canola, colour = "Calona"))+ labs(title="Trend of Simulative Price", x= "Date", y="Price")+ theme(legend.title=element_blank())
ggplot(simPr, aes(x=1:nrow(simPr))) + geom_line(aes(y = simPr$Wheat, colour = "Wheat")) +  geom_line(aes(y = simPr$Barley, colour = "Barley"))+ geom_line(aes(y = simPr$Oats, colour = "Oats")) + geom_line(aes(y = simPr$Flax, colour = "Flax")) + geom_line(aes(y = simPr$Canola, colour = "Calona"))+ labs(title="Trend of Simulative Price", x= "Date", y="Price")+ theme(legend.title=element_blank())
data(economics, package = "ggplot2")
econ <- transform(economics, date = as.character(date))
m1 <- mPlot(x = "date", y = c("psavert", "uempmed"), type = "Line", data = econ)
m1$set(pointSize = 0, lineWidth = 1)
require(devtools)
install_github('rCharts', 'ramnathv')
library("rCharts", lib.loc="D:/Program Files/R-3.0.3/library")
econ
economics
m1 <- mPlot(x = "date", y = c("psavert", "uempmed"), type = "Line", data = econ)
m1$set(pointSize = 0, lineWidth = 1)
m1$print("chart2")
library(rChart)
library(rCharts)
library(rCharts)
m1 <- mPlot(x = "date", y = c("psavert", "uempmed"), type = "Line", data = econ)
m1 <- mPlot(x = "date", y = c("psavert", "uempmed"), type = "Line", data = econ)
m1$set(pointSize = 0, lineWidth = 1)
m1$print("chart2")
yield<-read.csv("yield.csv", skip =2,  header = T, sep = ",")
head(yield)
yield <- yield[-1, c(1:5,7)]
head(yield)
names(yield)[c(4,6)]<-c("Flax","Wheat")
head(yield)
yield$date<-as.date(yield$date)
yield$date<-as.Date(yield$date)
sdyld <- apply(yield[,-1],2, function(x) sd(decomp(x, F)$remainder))
sdDtrend <- function(x) sd(decomp(x, F)$remainder)
sd(decomp(yield[,2], F)$remainder
sd(decomp(yield[,2], F)$remainder
sd(decomp(yield[,2], F)$remainder)
sdyld0 <- apply(yield[,-1],2, function(x) sd)
sdyld0
head(yield)
histyldb<-ggplot(data=melt(yield[,-1]), aes(as.factor(variable), value, fill=factor(variable)))
histyldb + geom_boxplot() + guides(fill=guide_legend(title=NULL))+labs(title="Boxplot for History Yield", x= "Crop", y="yield")
histyldl <- ggplot(yield, aes(yield[,1]))
yldBarley <- geom_line(aes(y = yield[,2], colour = "Barley"))
yldCanola <- geom_line(aes(y = yield[,3], colour = "Canola"))
yldFlax<- geom_line(aes(y = yield[,4], colour = "Flax"))
yldOats<- geom_line(aes(y = yield[,5], colour = "Oats"))
yldWheat<-geom_line(aes(y = yield[,6], colour = "Wheat"))
histyldl+yldBarley+yldCanola+yldFlax+yldOats+yldWheat
histyldl + yldBarley + yldCanola + yldFlax + yldOats+ yldWheat + labs(title="Trend of History yield", x= "Date", y="yield")+ theme(legend.title=element_blank())
sd(yield[,2])
sd(decomp(yield[,2], F)$remainder)
sdyld0 <- apply(yield[,-1],2, function(x) sd)
sdyld0
sd(yield[,3])
sd(decomp(yield[,3], F)$remainder)
sd(decomp(yield[,3])$remainder)
sd(decomp(yield[,3], FALSE)$remainder)
sdyld0 <- apply(yield[,-1],2, function(x) sd(x))
sdyld0
yield[,1]
yield<-read.csv("yield.csv", skip =2,  header = T, sep = ",")
head(yield)
sdDtrend <- function(x) sd(decomp(x, FALSE)$remainder)
sdyld <- apply(yield[,-1],2, function(x) sdDtrend(x))
sdyld
yield$date<-as.Date(yield$date,format = "%Y")
names(yield)[c(4,6)]<-c("Flax","Wheat")
yield <- yield[-1, c(1:5,7)]
head(yield)
histyldl <- ggplot(yield, aes(yield[,1]))
yldBarley <- geom_line(aes(y = yield[,2], colour = "Barley"))
yldCanola <- geom_line(aes(y = yield[,3], colour = "Canola"))
yldFlax<- geom_line(aes(y = yield[,4], colour = "Flax"))
yldOats<- geom_line(aes(y = yield[,5], colour = "Oats"))
yldWheat<-geom_line(aes(y = yield[,6], colour = "Wheat"))
histyldl + yldBarley + yldCanola + yldFlax + yldOats+ yldWheat + labs(title="Trend of History yield", x= "Date", y="yield")+ theme(legend.title=element_blank())
histyldl + yldBarley + yldCanola + yldFlax + yldOats+ yldWheat + labs(title="Trend of History yield", x= "Date", y="yield")+ theme(legend.title=element_blank())
histyldl + yldBarley + yldCanola + yldFlax + yldOats+ yldWheat + labs(title="Trend of History yield", x= "Date", y="yield")+ theme(legend.title=element_blank())+ scale_x_date(labels = date_format("%d"))
library(ggplot2)
library(scales)
histyldl + yldBarley + yldCanola + yldFlax + yldOats+ yldWheat + labs(title="Trend of History yield", x= "Date", y="yield")+ theme(legend.title=element_blank())+ scale_x_date(labels = date_format("%d"))
histyldl + yldBarley + yldCanola + yldFlax + yldOats+ yldWheat + labs(title="Trend of History yield", x= "Date", y="yield")+ theme(legend.title=element_blank())+ scale_x_date(labels = date_format("%y"))
head(yield)
yield
yield<-read.csv("yield.csv", skip =2,  header = T, sep = ",")
yield <- yield[-1, c(1:5,7)]
names(yield)[c(4,6)]<-c("Flax","Wheat")
yield$date<-as.Date(yield$date)
histyldl <- ggplot(yield, aes(yield[,1]))
yldBarley <- geom_line(aes(y = yield[,2], colour = "Barley"))
yldCanola <- geom_line(aes(y = yield[,3], colour = "Canola"))
yldFlax<- geom_line(aes(y = yield[,4], colour = "Flax"))
yldOats<- geom_line(aes(y = yield[,5], colour = "Oats"))
yldWheat<-geom_line(aes(y = yield[,6], colour = "Wheat"))
histyldl + yldBarley + yldCanola + yldFlax + yldOats+ yldWheat + labs(title="Trend of History yield", x= "Date", y="yield")+ theme(legend.title=element_blank())+ scale_x_date(labels = date_format("%y"))
yield
yield<-read.csv("yield.csv", skip =2,  header = T, sep = ",")
yield
yield<-read.csv("yield.csv", skip =2,  header = T, sep = ",")
yield
yield <- yield[-1, c(1:5,7)]
names(yield)[c(4,6)]<-c("Flax","Wheat")
histyldl <- ggplot(yield, aes(yield[,1]))
yldBarley <- geom_line(aes(y = yield[,2], colour = "Barley"))
yldCanola <- geom_line(aes(y = yield[,3], colour = "Canola"))
yldFlax<- geom_line(aes(y = yield[,4], colour = "Flax"))
yldOats<- geom_line(aes(y = yield[,5], colour = "Oats"))
yldWheat<-geom_line(aes(y = yield[,6], colour = "Wheat"))
histyldl + yldBarley + yldCanola + yldFlax + yldOats+ yldWheat + labs(title="Trend of History yield", x= "Date", y="yield")+ theme(legend.title=element_blank())+ scale_x_date(labels = date_format("%y"))
histyldl + yldBarley + yldCanola + yldFlax + yldOats+ yldWheat + labs(title="Trend of History yield", x= "Date", y="yield")+ theme(legend.title=element_blank())
sdyld0 <- apply(yield[,-1],2, function(x) sd(x))
sdyld <- apply(yield[,-1],2, function(x) sdDtrend(x))
sdyld
str(yield)
meanyld <- apply(yield[19:23,-1],2, mean)
simYld <- array(0, dim=c(iter, crops))
simnum=1000
simYld <- array(0, dim=c(iter, crops))
.Primitive("c")
f
simnum=1000
simYld <- array(0, dim=c(simnum, crops))
crops=5
simYld <- array(0, dim=c(simnum, crops))
meanyld
sdyld
for (i in 1:simnum) {
simYld[i,] <- rnorm(crops, meanyld, styld)
}
for (i in 1:simnum) {
simYld[i,] <- rnorm(crops, meanyld, sdyld)
}
head(simYld)
str(simYld)
names(simYld)<-names(yield)
str(simYld)
write.table(simYld,"simYld.csv", col.names = TRUE,row.names = FALSE, sep=",", )
as.data.frame(simPr)
as.data.frame(siYld)
as.data.frame(simYld)
write.table(as.data.frame(simYld),"simYld.csv", col.names = TRUE,row.names = FALSE, sep=",", )
simYld <- array(0, dim=c(simnum, crops))
for (i in 1:simnum) {
simYld[i,] <- rnorm(crops, meanyld, sdyld)
}
names(simYld)<-names(yield)
as.data.frame(simYld)
head(as.data.frame(simYld))
simYld<-as.data.frame(simYld)
names(simYld)<-names(yield)
names(simYld)<-names(yield)[-1]
head(simYld))
head(simYld)
write.table(simYld,"simYld.csv", col.names = TRUE,row.names = FALSE, sep=",", )
head(simPr)
str(simPr)
simPr <- simPr[-1]
str(simPr)
setwd("E:/Dropbox/book/economics/485/projects/nlfarm/data/SK")
price<- read.csv("price.csv", header = T, sep = ",")
price[, 1] <- as.Date(price[, 1], format = "%d/%m/%Y")
head(price)
head(price)
price[, 1] <- as.Date(price[, 1], format = "%d/%m/%Y")
gbmPara<- matrix(ncol=2)
# loop for all parameter
for(i in 2:ncol(price)){
x <- price[,i]
Data2=setYuima(data=setData(x),ymodel)
mle1 <- qmle(Data2, start = list(theta1 = 1, theta2 = -0.001),lower = list(theta1=-2, theta2=-1),upper = list(theta1=0.5, theta2=0.5), method = "L-BFGS-B")
coef(mle1)
gbmPara <- rbind(gbmPara, coef(mle1))
}
gbmPara<-as.data.frame(gbmPara)
gbmPara<-gbmPara[-1,]
names(gbmPara)<-c("sigma","mu")
row.names(gbmPara) <- names(price)[-1]
# print GBM parameters talbe
print(xtable(gbmPara), type = "html", include.rownames = F)
# set mean of price as initial value
# meanPr<-apply(price[265:340,-1],2,mean)
# print mean of price talbe
print(xtable(meanPr), type = "html", include.rownames = F)
# write to talbe csv
write.table(gbmPara, "gbmPara.csv", col.names = TRUE,row.names = T, sep="," )
simPr<-matrix(nrow=n+1)
# set loop for 5 crop sim price
for(j in 1:length(meanPr)){
dyuima <- simulate(yuima, xinit= meanPr[j], true.parameter=list(theta1=gbmPara[j,1],theta2=gbmPara[j,2]))
as.numeric(dyuima@data@ original.data)
simPr<-cbind(simPr,as.numeric(dyuima@data@ original.data))
}
head(simPr)
head(simPr)
simPr<-as.data.frame(simPr[,-1])
simPr<-as.data.frame(simPr[-1,-1])
simPr<-matrix(nrow=n+1)
# set loop for 5 crop sim price
for(j in 1:length(meanPr)){
dyuima <- simulate(yuima, xinit= meanPr[j], true.parameter=list(theta1=gbmPara[j,1],theta2=gbmPara[j,2]))
as.numeric(dyuima@data@ original.data)
simPr<-cbind(simPr,as.numeric(dyuima@data@ original.data))
}
simPr<-as.data.frame(simPr[-1,-1])
head(simPr)
names(simPr)<-names(price)[-1]
head(simPr)
str(simPr)
head(simYld)
simYld<-simYld(,c("Wheat","Oats","Barley","Flax","Canola"))
simYld<-simYld[,c("Wheat","Oats","Barley","Flax","Canola")]
head(simYld)
simRev <- array(0, dim=c(simnum, crops))
revSim[1] <- simPr[1,]*simYld[1,]
simRev[1] <- simPr[1,]*simYld[1,]
simPr[1,]*simYld[1,]
head(simPr)
str(simRev)
simnum
crops
simRev[1,] <- simPr[1,]*simYld[1,]
simRev <- array(0, dim=c(simnum, crops))
simRev[1,] <- simPr[1,]*simYld[1,]
simRev[1,]
str(simRev)
simRev <- data.frame(0, dim=c(simnum, crops))
str(simRev)
simRev <- data.frame(0, simnum, crops)
str(simRev)
simRev <- array(0, dim=c(simnum, crops))
str(simRev)
simRev[1,] <- simPr[1,]*simYld[1,]
simRev[1,]
simRev[1,] <- simPr[1,]*simYld[1,]
simRev <- array(0, dim=c(simnum, crops))
simRev[1,] <- simPr[1,]*simYld[1,]
str(simRev)
simRev <- data.frame(nrow=simnum, ncol=crops)
str(simRev)
simRev[1,]
simRev <- matrix(nrow=simnum, ncol=crops)
str(simRev)
simRev
simRev[1,] <- simPr[1,]*simYld[1,]
simRev
simRev
head(simRev)
simPr[1,]*simYld[1,]
simRev <- matrix(nrow=simnum, ncol=crops)
head(simRev)
str(simPr[1,]*simYld[1,])
simRev <- matrix(ncol=crops)
head(simRev)
simRev <- rbind(simRev,simPr[i,]*simYld[i,])         #gross revenue
simRev <- rbind(simRev,simPr[1,]*simYld[1,])
simRev <- data.frame(ncol=crops)
simRev[1,]
simRev <- array(0, dim=c(simnum, crops))
str(simRev)
simRev[1,] <- as.vector(simPr[1,]*simYld[1,])
head(simRev)
simRev <- rbind(simRev,as.vector(simPr[i,]*simYld[i,]))
head(simRev)
simRev <- array(0, dim=c(simnum, crops))
simRev <- rbind(simRev,as.vector(simPr[i,]*simYld[i,]))
simRev <- matrix(ncol=crops)
simRev <- rbind(simRev,as.vector(simPr[i,]*simYld[i,]))
names(simRve)
names(simRev)
names(simRev)<-names(simPr)
names(simRev)
simRev <- rbind(simRev,as.vector(simPr[i,]*simYld[i,]))
head(simRev)
simRev[1,] <- as.vector(simPr[1,]*simYld[1,])
simRev[1,]
str(simRev)
simRev[1,] <- as.vector(simPr[1,]*simYld[1,])
simRev <- array(0, dim=c(simnum, crops))
str(simRev)
simRev[1,]
simRev[1,] <- as.vector(simPr[1,]*simYld[1,])
simRev[1,]
simRev <- array(0, dim=c(simnum, crops))
as.array(simPr[1,]*simYld[1,])
(simPr[1,]*simYld[1,])[1]
(simPr[1,]*simYld[1,])[,1]
(simPr[1,]*simYld[,1])
(simPr[1,]*simYld[,1])[1,]
(simPr[1,]*simYld[,1])[[1,]]
(simPr[1,]*simYld[,1])[[1]]
str(simPr[1,]*simYld[1,])
df<-simPr[1,]*simYld[,1])
df<-simPr[1,]*simYld[,1]
df
df<-simPr[1,]*simYld[1,]
df
df<-rbind(df,simPr[1,]*simYld[1,])
df
simRev<-simPr[1,]*simYld[1,]
str(simRev)
for (i in 2:simnum) {
simRev <- rbind(simRev,(simPr[i,]*simYld[i,]))
}
str(simRev)
head(simRev)
write.table(simRev,"simRev.csv", col.names = TRUE,row.names = FALSE, sep=",", )
setwd("E:/Dropbox/book/economics/485/projects/nlfarm/finalcode")
library(slidify)
author.desk(slide)
require(devtools)
author("slides")
